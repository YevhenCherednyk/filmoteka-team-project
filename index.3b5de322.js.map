{"mappings":"AAAe,SAAAA,EAAoBC,EAAMC,GACvC,MAAMC,EAAOF,EACVG,KACC,EAACC,GACCA,EAAEC,MACFA,EAAKC,KACLA,EAAIC,UACJA,EAASC,aACTA,EAAYC,eACZA,EAAcC,YACdA,EAAc,wDAEd,MAAO,yCAAyCN,2GAEMM,WAAqBC,EACzEN,EACAC,iIAI0CK,EAAUN,EAAOC,4FAiBrE,SAAoBL,EAAQW,GAC1B,MAAMC,EAAc,GAEpB,IAAK,IAAIT,KAAMQ,EAAU,CACvB,IAAIE,EAAOb,EAAOA,OAAOc,MAAKC,GAASA,EAAMZ,KAAOA,IACxCa,MAARH,GAGFD,EAAYK,KAAKJ,EAAKR,K,CAIC,IAAvBO,EAAYM,QACdN,EAAYK,KAAK,SAGnB,OAAIL,EAAYM,OAAS,EAChB,CAACN,EAAY,GAAIA,EAAY,GAAI,SAASO,KAAK,MAEjDP,EAAYO,KAAK,K,CAnCwDC,CAC5DpB,EACAM,iDA4CCe,EA1Cbd,EA0C0Be,EAzC1Bd,EA0CJa,EACKA,EAAYE,MAAM,EAAG,GAGvBD,EAAUC,MAAM,EAAG,iFAL5B,IAAuBF,EAAaC,CArClB,IAGbH,KAAK,IACR,OAAOlB,C,CAyBT,SAASS,EAAUN,EAAOC,GACxB,OAAID,GAIGC,C,CC3DF,MAAMmB,EAKXC,4BACE,MAAMC,EAAM,gGAAwDC,KAAKC,OACzED,KAAKE,gBACL,IACE,MAAMC,QAAiBC,MAAML,GAE7B,aADwBI,EAASE,M,CAEjC,MAAOC,GACPC,QAAQC,IAAIF,E,EAIhBR,qBAEE,IACE,MAAMK,QAAiBC,MAFb,0FAIV,aADqBD,EAASE,M,CAE9B,MAAOC,GACPC,QAAQC,IAAIF,E,EAIhBJ,gBACEF,KAAKC,MAAQ,C,CAGfQ,gBACET,KAAKC,MAAQ,C,CAGfS,YACEV,KAAKC,KAAO,C,CApCdU,cACEX,KAAKC,KAAO,C,EAuChB,MAAMW,EAAY,IAAIf,EAEhBgB,EAAYC,SAASC,cAAc,gBAEzCjB,iBACE,MAAMzB,QAAeuC,EAAUI,eACzBC,QAAkBL,EAAUM,sBAClCX,QAAQC,IAAIS,GACZV,QAAQC,IAAInC,GACZ,MAAM8C,EAAShD,EAAW8C,EAAUG,QAAS/C,GAC7CwC,EAAUQ,mBAAmB,YAAaF,E,CAK5CG","sources":["src/js/card/card-murkup-main.js","src/js/api-service/trendingAndGenres.js"],"sourcesContent":["export default function markupCard(data, genres) {\n  const card = data\n    .map(\n      ({\n        id,\n        title,\n        name,\n        genre_ids,\n        release_date,\n        first_air_date,\n        poster_path = '../images/сard-films/movie-poster-coming-soon.jpg',\n      }) => {\n        return `<li class=\"films-list__item\" data-id=\"${id}\">\n                <div class=\"wrapper\">\n                    <img src=\"http://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${optimizer(\n          title,\n          name\n        )}\" />\n                </div>\n                <div class=\"text-wrapper\">\n                    <h2 class=\"films-list__title\">${optimizer(title, name)}</h2>\n                    <p class=\"films-list__text\"><span class=\"films-list__ganre\">${findGenres(\n                      genres,\n                      genre_ids\n                    )}</span> &#10072; <span class=\"release-date\">${dateOptimizer(\n          release_date,\n          first_air_date\n        )}</span>\n                    </p>\n                </div>\n            </li>`;\n      }\n    )\n    .join('');\n  return card;\n}\n\nfunction findGenres(genres, genreIds) {\n  const genresArray = [];\n\n  for (let id of genreIds) {\n    let item = genres.genres.find(genre => genre.id === id);\n    if (item == undefined) {\n      continue;\n    } else {\n      genresArray.push(item.name);\n    }\n  }\n\n  if (genresArray.length === 0) {\n    genresArray.push('Other');\n  }\n\n  if (genresArray.length > 3) {\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\n  }\n  return genresArray.join(', ');\n}\n\nfunction optimizer(title, name) {\n  if (title) {\n    return title;\n  }\n\n  return name;\n}\n\nfunction dateOptimizer(releaseDate, firstDate) {\n  if (releaseDate) {\n    return releaseDate.slice(0, 4);\n  }\n\n  return firstDate.slice(0, 4);\n}\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '19011014b9b53c4fd496d37c25f2b619';\n// import libraryCardMarkup from '../library-card/library-card';\nimport markupCard from '../card/card-murkup-main';\n\nexport class getTrendingMovies {\n  constructor() {\n    this.page = 1;\n  }\n\n  async searchTrendingFilms() {\n    const url = `${BASE_URL}trending/all/week?api_key=${API_KEY}&page=${this.page}`;\n    this.pageIncrement();\n    try {\n      const response = await fetch(url);\n      const trendings = await response.json();\n      return trendings;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async searchGenres() {\n    const url = `${BASE_URL}genre/movie/list?api_key=${API_KEY}`;\n    try {\n      const response = await fetch(url);\n      const genres = await response.json();\n      return genres;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  pageIncrement() {\n    this.page += 1;\n  }\n\n  pageDecrement() {\n    this.page -= 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n}\n\nconst GetMovies = new getTrendingMovies();\n\nconst container = document.querySelector('.films-list');\n\nasync function markupRenderer() {\n  const genres = await GetMovies.searchGenres();\n  const trendings = await GetMovies.searchTrendingFilms();\n  console.log(trendings);\n  console.log(genres);\n  const markup = markupCard(trendings.results, genres);\n  container.insertAdjacentHTML('beforeend', markup);\n}\n\nexport default getTrendingMovies;\n\nmarkupRenderer();\n"],"names":["$3ecc2339d578db49$export$2e2bcd8739ae039","data","genres","card","map","id","title","name","genre_ids","release_date","first_air_date","poster_path","$3ecc2339d578db49$var$optimizer","genreIds","genresArray","item","find","genre","undefined","push","length","join","$3ecc2339d578db49$var$findGenres","releaseDate","firstDate","slice","$84c1efcef7a72cea$export$6405226d42414f72","async","url","this","page","pageIncrement","response","fetch","json","error","console","log","pageDecrement","resetPage","constructor","$84c1efcef7a72cea$var$GetMovies","$84c1efcef7a72cea$var$container","document","querySelector","searchGenres","trendings","searchTrendingFilms","markup","results","insertAdjacentHTML","$84c1efcef7a72cea$var$markupRenderer"],"version":3,"file":"index.3b5de322.js.map"}