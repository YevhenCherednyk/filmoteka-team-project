{"mappings":"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","sources":["src/js/api-service/trending-and-genres.js","src/js/card/card-murkup-main.js","src/js/all-genres/find-genres.js","src/js/pagination/request-hendler.js","src/js/api-service/searche-and-render.js","src/js/pagination/get-data-and-put-to-render.js","src/js/pagination/fetch-data.js","src/js/pagination/pagination-event-handler.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '19011014b9b53c4fd496d37c25f2b619';\nimport spinnerControls from '../spinner/spinner';\nimport markupCard from '../card/card-murkup-main';\nimport paginationManager from '../pagination/pagination-manager';\nimport PathHendler from '../pagination/request-hendler';\n\nexport class GetTrendingMovies {\n  constructor() {\n    this.page = 1;\n    this.searchQuery = '';\n  }\n\n  async searchTrendingFilms() {\n    const url = `${BASE_URL}trending/all/week?api_key=${API_KEY}&page=${this.page}`;\n    try {\n      const response = await fetch(url);\n      const trendings = await response.json();\n      return trendings;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async searchGenres() {\n    const url = `${BASE_URL}genre/movie/list?api_key=${API_KEY}`;\n    try {\n      const response = await fetch(url);\n      const genres = await response.json();\n      return genres;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieSearch() {\n    try {\n      const response = await fetch(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&query=${this.searchQuery}&page=${this.page}`\n      );\n      const searchedMovies = await response.json();\n      return searchedMovies;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  GetMovieSearcPath() {\n    return `${BASE_URL}search/movie?api_key=${API_KEY}&query=${this.searchQuery}`;\n  }\n  GetTrendingSearcPath() {\n    return `${BASE_URL}trending/all/week?api_key=${API_KEY}`;\n  }\n\n  pageIncrement() {\n    this.page += 1;\n  }\n\n  pageDecrement() {\n    this.page -= 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  set currentPage(newPage) {\n    this.page = newPage;\n  }\n\n  get currentPage() {\n    return this.page;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n\nconst GetMovies = new GetTrendingMovies();\n\nconst container = document.querySelector('.films-list');\nwindow.addEventListener('load', () => {\n  spinnerControls.showSpinner();\n  setTimeout(markupRenderer, 500);\n});\n\nasync function markupRenderer() {\n  const genres = await GetMovies.searchGenres();\n  const trendings = await GetMovies.searchTrendingFilms();\n  const markup = markupCard(trendings.results, genres);\n  container.innerHTML = markup;\n\n  paginationManager(trendings.page, trendings.total_pages);\n  PathHendler.path = GetMovies.GetTrendingSearcPath();\n\n  spinnerControls.hideSpinner();\n}\n\nexport default GetTrendingMovies;\n","import dateOptimizer from '../api-service/date-optimizer';\nimport titleOptimizer from '../api-service/title-optimizer';\nimport findGenres from '../all-genres/find-genres';\nimport picturePathPlace from '../api-service/placeholder';\nexport default function markupCard(data, genres) {\n  const card = data\n    .map(\n      ({\n        id,\n        title,\n        name,\n        genre_ids,\n        release_date,\n        first_air_date,\n        poster_path,\n      }) => {\n        return `<li class=\"films-list__item\" data-id=\"${id}\">\n                    <img class=\"films-list__img\" src=\"${picturePathPlace(\n                      poster_path\n                    )}\" alt=\"${titleOptimizer(title, name)}\" />\n                    <h2 class=\"films-list__title\">${titleOptimizer(\n                      title,\n                      name\n                    )}</h2>\n                    <span class=\"films-list__info films-list__ganre\">${findGenres(\n                      genres,\n                      genre_ids\n                    )}</span> <span class=\"films-list__info\">&#10072;</span> <span class=\"films-list__info release-date\">${dateOptimizer(\n          release_date,\n          first_air_date\n        )}</span>\n            </li>`;\n      }\n    )\n    .join('');\n  return card;\n}\n","export default function findGenres(genres, genreIds) {\n  const genresArray = [];\n\n  if (!genreIds) {\n    return 'Other';\n  }\n\n  for (let id of genreIds) {\n    let item = genres.genres.find(genre => genre.id === id);\n    if (item == undefined) {\n      continue;\n    } else {\n      genresArray.push(item.name);\n    }\n  }\n\n  if (genresArray.length === 0) {\n    genresArray.push('Other');\n  }\n\n  if (genresArray.length > 3) {\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\n  }\n\n  return genresArray.join(', ');\n}\n","class RequestHendler {\n  constructor() {\n    this.requst = '';\n  }\n  get path() {\n    return this.requst;\n  }\n\n  set path(newPath) {\n    this.requst = newPath;\n  }\n}\n\nconst pathToTrandingMovies =\n  'https://api.themoviedb.org/3/trending/movie/week?api_key=19011014b9b53c4fd496d37c25f2b619';\n\nconst PathHendler = new RequestHendler();\nPathHendler.path = pathToTrandingMovies;\nexport default PathHendler;\n","import GetTrendingMovies from './trending-and-genres';\nimport markupCard from '../card/card-murkup-main';\nimport spinnerControls from '../spinner/spinner';\nimport paginationManager from '../pagination/pagination-manager';\nimport PathHendler from '../pagination/request-hendler';\n\n\nconst refs = {\n  searchForm: document.querySelector('.search-form'),\n  articlesContainer: document.querySelector('.films-list'),\n  txt: document.querySelector('.errorText'),\n};\n\nconst moviesApiService = new GetTrendingMovies();\nconst text = refs.txt.textContent;\n\nrefs.txt.textContent = ' ';\n\nrefs.searchForm.addEventListener('submit', onSearch);\n\nasync function onSearch(e) {\n  e.preventDefault();\n \n  const divPaginationRef = document.querySelector('.pagination');\n  divPaginationRef.classList.add('hide-pagination');\n \n  moviesApiService.query = e.currentTarget.elements.query.value;\n\n  const genres = await moviesApiService.searchGenres();\n  const searchedMovies = await moviesApiService.fetchMovieSearch();\n  clearArticlesContainer();\n  if (moviesApiService.query === '' || searchedMovies.results.length === 0) {\n    refs.txt.style.color = '#ff001b';\n    refs.txt.textContent =\n      'Search result not successful. Enter the correct movie name and try again!';\n    refs.searchForm.reset();\n    return;\n  }\n\n  refs.txt.textContent = ' ';\n\n  spinnerControls.showSpinner();\n  moviesApiService.resetPage();\n  appendHitsMarkup(searchedMovies.results, genres);\n  refs.searchForm.reset();\n  refs.txt.style.color = 'green';\n  refs.txt.textContent = `Search result for: ${capitalizeQuery(\n    moviesApiService.query\n  )}`;\n  \n  paginationManager(searchedMovies.page, searchedMovies.total_pages);\n  PathHendler.path = moviesApiService.GetMovieSearcPath();\n}\n\nfunction appendHitsMarkup(results, genres) {\n  refs.articlesContainer.insertAdjacentHTML(\n    'beforeend',\n    markupCard(results, genres)\n  );\n  spinnerControls.hideSpinner();\n}\n\nfunction clearArticlesContainer() {\n  refs.articlesContainer.innerHTML = '';\n}\n\nfunction capitalizeQuery(text) {\n  return text[0].toUpperCase() + text.slice(1);\n}","import paginationManager from './pagination-manager';\nimport markupCard from '../card/card-murkup-main';\nimport fetchData from './fetch-data';\n\nconst container = document.querySelector('.films-list');\nconst pathToGanres =\n  'https://api.themoviedb.org/3/genre/movie/list?api_key=19011014b9b53c4fd496d37c25f2b619';\n\nasync function getDataAndPutToRender(basePath, page) {\n  const movies = await fetchData(`${basePath}&page=${page}`);\n  const genres = await fetchData(pathToGanres);\n  const markupListOfMovies = await markupCard(movies.results, genres);\n  container.innerHTML = markupListOfMovies;\n  paginationManager(movies.page, movies.total_pages);\n  window.scrollTo({\n    top: 270,\n    behavior: 'smooth',\n  });\n}\n\nexport default getDataAndPutToRender;\n","import Notiflix from 'notiflix';\nimport axios from 'axios';\n\nasync function fetchData(path) {\n  try {\n    const response = await axios.get(path);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.error(error);\n    return;\n  }\n}\n\nexport default fetchData;\n","import getDataAndPutToRender from './get-data-and-put-to-render';\nimport PathHendler from './request-hendler';\n\nconst paginationRef = document.querySelector('.pagination');\n\npaginationRef.addEventListener('click', e => {\n  if (e.target.innerText === '' || e.target.type !== 'button') {\n    return;\n  }\n  const currentButton = document.querySelector('.current-btn');\n  let page = currentButton.innerText;\n  if (e.target.innerText === '+1') {\n    page = parseInt(page) + 1;\n  } else if (e.target.innerText === '-1') {\n    page = parseInt(page) - 1;\n  } else {\n    page = e.target.innerText;\n  }\n  getDataAndPutToRender(PathHendler.path, page);\n});\n"],"names":["$hsVKb","parcelRequire","$7JhjK","$4c58d22a933a5163$export$2e2bcd8739ae039","genres","genreIds","genresArray","id","item","find","genre","undefined","push","name","length","join","$3ecc2339d578db49$export$2e2bcd8739ae039","data","map","title","genre_ids","release_date","first_air_date","poster_path","$CjjGD","default","$8mK9U","$6d2541694ec526e9$var$PathHendler","path","this","requst","newPath","constructor","$6d2541694ec526e9$export$2e2bcd8739ae039","$815d474f9ba0877d$export$be063a400d042648","async","url","page","response","fetch","json","error","console","log","searchQuery","GetMovieSearcPath","GetTrendingSearcPath","pageIncrement","pageDecrement","resetPage","currentPage","newPage","query","newQuery","$815d474f9ba0877d$var$GetMovies","$815d474f9ba0877d$var$container","document","querySelector","$815d474f9ba0877d$var$markupRenderer","searchGenres","trendings","searchTrendingFilms","markup","results","innerHTML","$dekjU","total_pages","hideSpinner","window","addEventListener","showSpinner","setTimeout","$815d474f9ba0877d$export$2e2bcd8739ae039","$8a4d683e6929fa84$var$refs","searchForm","articlesContainer","txt","$8a4d683e6929fa84$var$moviesApiService","textContent","e","preventDefault","classList","add","currentTarget","elements","value","searchedMovies","fetchMovieSearch","$8a4d683e6929fa84$var$clearArticlesContainer","style","color","reset","insertAdjacentHTML","$8a4d683e6929fa84$var$appendHitsMarkup","text1","toUpperCase","slice","$eWCmQ","$a8eae5df838ae370$export$2e2bcd8739ae039","$2shzp","get","$parcel$interopDefault","Notify","$44012b47f255f8c3$var$container","$44012b47f255f8c3$export$2e2bcd8739ae039","basePath","movies","markupListOfMovies","scrollTo","top","behavior","target","innerText","type","parseInt"],"version":3,"file":"index.01299701.js.map"}