{"mappings":"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","sources":["src/library.js","src/js/library-card/createMovieLibraryMarkup.js","src/js/library-card/genresList.js","src/js/library-card/library-card.js"],"sourcesContent":["import './js/modal_oc';\n\nimport './js/library-card/library-card';\n\nimport './js/scrol-to-top/scrollToTop';\n\nimport './js/pagination/paginationEventHandler';\nimport './js/modal-film-card/movie-details';\nimport './js/modal-film-card/add-to-localStorage';","import dateOptimizer from '../api-service/date-optimizer';\nimport titleOptimizer from '../api-service/title-optimizer';\nimport genresList from './genresList';\n\nexport default function createMovieLibraryMarkup(data) {\n  if (!data && !data.length) {\n    return;\n  }\n\n  return data\n    .map(\n      ({\n        id,\n        poster_path,\n        title,\n        name,\n        vote_average,\n        original_title,\n        genres,\n        overview,\n        release_date,\n        first_air_date,\n      }) => {\n        return `<li class=\"films-list__item\" data-id=\"${id}\">\n  <img class=\"films-list__img\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${titleOptimizer(\n          title,\n          name\n        )}\" />\n  <h2 class=\"films-list__title\">${titleOptimizer(original_title, name)}</h2>\n    <span class=\"films-list__info films-list__ganre\">${genresList(genres)}\n  </span> <span class=\"films-list__info\">&#10072;</span> <span class=\"films-list__info release-date\">${dateOptimizer(\n    release_date,\n    first_air_date\n  )}\n<span class=\"films-list__info films-rating \"> ${vote_average.toFixed(1)}</span>\n</li>`;\n      }\n    )\n    .join('');\n}\n","export default function genresList(genres) {\n  const genreList = genres.map(({ name }) => name);\n\n  if (!genreList.length) {\n    genreList.push('Other');\n  }\n\n  if (genreList.length > 2) {\n    return [genreList[0], genreList[1], 'Other'].join(', ');\n  }\n\n  return genreList.join(', ');\n}","import createMovieLibraryMarkup from './createMovieLibraryMarkup';\nimport paginationManager from '../pagination/paginationManager';\n\nconst refs = {\n  libraryUl: document.querySelector('#library'),\n  BtnWatched: document.querySelector('#watched'),\n  BtnQueue: document.querySelector('#queue'),\n};\n\nconst paginationRef = document.querySelector('.pagination');\nconst moviesOnPage = 20;\nlet movies;\n\nwindow.onload = () => {\n  paginationRef.classList.add('hide-pagination');\n  refs.BtnWatched.classList.add(\"active\");\n  refs.BtnQueue.classList.remove(\"active\");\n  movies = JSON.parse(localStorage.getItem('watched'));\n  const arrMovies = movies.slice(0, moviesOnPage);\n  refs.libraryUl.innerHTML = createMovieLibraryMarkup(arrMovies);\n  const numberOfPages = Math.ceil(movies.length / moviesOnPage);\n  paginationManager(1, numberOfPages);\n};\n\nrefs.BtnWatched.addEventListener('click', () => {\n  paginationRef.classList.add('hide-pagination');\n  refs.BtnWatched.classList.add(\"active\");\n  refs.BtnQueue.classList.remove(\"active\");\n  movies = JSON.parse(localStorage.getItem('watched'));\n  const arrMovies = movies.slice(0, moviesOnPage);\n  refs.libraryUl.innerHTML = createMovieLibraryMarkup(arrMovies);\n  const numberOfPages = Math.ceil(movies.length / moviesOnPage);\n  paginationManager(1, numberOfPages);\n});\n\nrefs.BtnQueue.addEventListener('click', () => {\n  paginationRef.classList.add('hide-pagination');\n  refs.BtnWatched.classList.remove(\"active\");\n  refs.BtnQueue.classList.add(\"active\");\n  movies = JSON.parse(localStorage.getItem('queue'));\n  const arrMovies = movies.slice(0, moviesOnPage);\n  refs.libraryUl.innerHTML = createMovieLibraryMarkup(arrMovies);\n  const numberOfPages = Math.ceil(movies.length / moviesOnPage);\n  paginationManager(1, numberOfPages);\n});\n\npaginationRef.addEventListener('click', e => {\n  if (e.target.innerText === '' || e.target.type !== 'button') {\n    return;\n  }\n  const currentButton = document.querySelector('.current-btn');\n  let page = currentButton.innerText;\n  if (e.target.innerText === '+1') {\n    page = parseInt(page) + 1;\n  } else if (e.target.innerText === '-1') {\n    page = parseInt(page) - 1;\n  } else {\n    page = e.target.innerText;\n  }\n\n  const currentPageMovies = [];\n  const startIterator = page * moviesOnPage - moviesOnPage;\n  const endIterator = startIterator + moviesOnPage;\n  for (let i = startIterator; i < endIterator; i +=1) {\n    if (!movies[i]) {\n      break;\n    }\n    currentPageMovies.push(movies[i])\n  }\n  refs.libraryUl.innerHTML = createMovieLibraryMarkup(currentPageMovies);\n  const numberOfPages = Math.ceil(movies.length / moviesOnPage);\n  paginationManager(parseInt(page), numberOfPages);\n  window.scrollTo({\n    top: 270,\n    behavior: 'smooth',\n  });\n});\n"],"names":["parcelRequire","$7JhjK","$cdfbfb068b774577$export$2e2bcd8739ae039","genres","genreList","map","name","length","push","join","$ca216bc75145040d$export$2e2bcd8739ae039","data","id","poster_path","title","vote_average","original_title","overview","release_date","first_air_date","$8mK9U","default","toFixed","$13cf809e75ce6b71$var$refs","libraryUl","document","querySelector","BtnWatched","BtnQueue","$13cf809e75ce6b71$var$paginationRef","$13cf809e75ce6b71$var$movies","window","onload","classList","add","remove","JSON","parse","localStorage","getItem","arrMovies","slice","innerHTML","numberOfPages","Math","ceil","$1lykM","addEventListener","e","target","innerText","type","page","parseInt","currentPageMovies","startIterator","endIterator","i","scrollTo","top","behavior"],"version":3,"file":"library.64ad0e45.js.map"}